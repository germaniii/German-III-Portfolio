;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Mon Nov 16 2020
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000     
;
; German E Felisarta III 16101002   CpE3104 Grp1
;
;====================================================================      

DATA SEGMENT   
   PORTA EQU 0F0H				            ; PORT ADDRESSES   
   PORTB EQU 0F2H				   
   PORTC EQU 0F4H				 
   COM_REG EQU 0F6H				 
   PASSWORD db '12345$'			        ; PASSWORD                     
   PROMPT_REQ db 'ENTER PASSCODE:$'		; DISPLAY PROMPTS         
   MSG1 db 'PASSCODE ENTERED$'		
   MSG2 db 'SUCCESSFULLY!$'			
   MSG3 db 'PRESS * TO LOCK$'		
   PROMPT_LOCKDOWN db 'SYSTEM LOCKUP MODE$'	
DATA ENDS

CODE    SEGMENT PUBLIC 'CODE'
        ASSUME CS:CODE

START:
   MOV DX, COM_REG		    
   MOV AL, 89H		
   OUT DX, AL
   CALL INIT_LCD
   MOV BH, 03H
   LEA DI, PASSWORD
   
MAIN:
   MOV AL, 01H			    ; CLEAR 
   CALL INST_CTRL      		
   MOV AL, 0C3H        		
   CALL INST_CTRL      	   
   LEA SI, PROMPT_REQ
   CALL DISP_STRING         
   CALL INPUT_PASS
   HLT

INST_CTRL PROC NEAR
    MOV DX, PORTA       	
    OUT DX, AL          	
    MOV DX, PORTB       	
    MOV AL, 02H         	
    OUT DX, AL          	
    CALL DELAY          	
    MOV DX, PORTB       	
    MOV AL, 00H         
    OUT DX, AL          	
    RET
INST_CTRL ENDP

INIT_LCD PROC NEAR
    MOV AL, 38H		
    CALL INST_CTRL		
    MOV AL, 0CH             ; ACTIVATE DISPLAY
    CALL INST_CTRL	    	
    MOV AL, 01H             ; CLEAR
    CALL INST_CTRL		
    MOV AL, 06H		    	; MOVE CURSOR
    CALL INST_CTRL	    
    RET
INIT_LCD ENDP

DATA_CTRL PROC NEAR
    MOV DX, PORTA       	
    OUT DX, AL			  
    MOV DX, PORTB      	
    MOV AL, 03H         	
    OUT DX, AL          	
    CALL DELAY          	
    MOV DX, PORTB       	
    MOV AL, 01H         	
    OUT DX, AL          	
    RET
DATA_CTRL ENDP

DELAY PROC NEAR			; TIME DELAY (optional)
   MOV CX, 0FFFh
   DELAY_LOOP:
      DEC CX
      CMP CX, 00H
      JNZ DELAY_LOOP
   RET
DELAY ENDP

KEYPRESS PROC      
   CHECK:			    ; INPUT FOR NUMPAD
      XOR AL, AL
      IN AL, PORTC
      CMP AL, 0FFH
      JE CHECK
      CALL ADJUST		; ADJUST ADJUSTS NUMPAD BINDINGS TO MATCH MM74C
   RET
KEYPRESS ENDP

ADJUST PROC                
   CMP AL, 0F0H               
   JE INCREMENT               
   CMP AL, 0F1H               
   JE INCREMENT               
   CMP AL, 0F2H               
   JE INCREMENT
   CMP AL, 0F8H
   JE DECREMENT
   CMP AL, 0F9H
   JE DECREMENT
   CMP AL, 0FAH
   JE DECREMENT
   CMP AL, 0FDH
   JE ZERO
   JMP LOOP_END

   INCREMENT:
      INC AL
      JMP LOOP_END
   DECREMENT:
      DEC AL
      JMP LOOP_END
   ZERO:
      MOV AL, 0F0H
   LOOP_END:
      RET
ADJUST ENDP

DISP_STRING PROC NEAR		    ; FOR PRINT STRING
   DISP_LOOP:        		    ; LOOP TO PRINT EACH CHARACTER FROM STRING        
      MOV AL, [SI]
      CMP AL, '$'
      JE EXIT
      CALL DATA_CTRL
      CALL delay
      INC SI
      JMP DISP_LOOP
   EXIT:
      RET
DISP_STRING ENDP

INPUT_PASS PROC
   MOV BL, 0D7H
   AUTH_LOOP:
      MOV AL, BL		        ; SET CURSOR ADDRESS
      CALL INST_CTRL		
      CALL KEYPRESS      	
      XOR AL, 0C0H          	
      CALL CHECK	    	
      CALL DATA_CTRL    	
      ADD BL, 03H           	; ADJUST CURSOR ADDRESS
      CALL AWAIT_INPUT        
      JMP AUTH_LOOP          	; LOOP FOR NEXT CHARACTER INPUT
   RET
INPUT_PASS ENDP

AWAIT_INPUT PROC               	; LOOP UNTIL INPUT IS COMPLETE
   CHECK_STATUS:
      IN AL, PORTC
      CMP AL, 0FFH
      JNE CHECK_STATUS
   RET
AWAIT_INPUT ENDP

CHECK PROC               	    ; CHECK ENTERED PASSWORD
   CMP AL, [DI]
   JNE INVALID                  ; IF INPUT IS INVALID, RESTART SYSTEM
   PUSH BX                       
   MOV BL, '$'
   INC DI
   CMP [DI], BL                 ; CHECKS IF ALL CHARACTERS INPUTTED IS CORRECT
   POP BX
   JE VALID                 	
   RET

   INVALID:
      dec bh
      cmp bh, 00h
      je LOCKDOWN
      lea di, PASSWORD       	; RESET INDEX
      jmp MAIN		            ; RESTARTS SYSTEM BECAUSE INVALID INPUT 

   VALID:
      MOV AL, 01H         	    ; CLEAR
      CALL INST_CTRL         	
      MOV AL, 082H          	
      CALL INST_CTRL        
      LEA si, MSG1       	    ; PROMPT
      CALL DISP_STRING
      MOV AL, 0C4H           	
      CALL INST_CTRL          	
      LEA si, MSG2       	    ; PROMPT
      CALL DISP_STRING              
      MOV AL, 0D7H            	
      CALL INST_CTRL          	
      LEA si, MSG3       	    ; PROMPT
      CALL DISP_STRING
      
      
    CHECK_STAR:        	    ; LOOP WHEN '*' IS NOT INPUTTED
      CALL KEYPRESS
      CMP AL, 0FCH         	    ; CHECK FOR STAR INPUT
      JNE CHECK_STAR
      MOV BH, 03h        	    ; DEFAULT VALUES
      LEA DI, PASSWORD    	    ; RESTART SYSTEM
      JMP MAIN

   LOCKDOWN:
      MOV AL, 01H         	    ; CLEAR
      CALL INST_CTRL      	
      MOV AL, 0CH         	
      CALL INST_CTRL      	
      MOV AL, 0C2H        	    
      CALL INST_CTRL      	
      LEA si, PROMPT_LOCKDOWN
      CALL DISP_STRING
      HLT
CHECK ENDP

CODE	ENDS
        END START
        END START
        END START